//第一题
    function reverse(s){
        if(s.length<=1){
            return s;
        }
        return reverse(s.substring(1))+s.charAt(0);
    }
    var a="98784654";
    console.log(reverse(a));
//第二题
    function calc(expr) {
        var item;
        var arr = [];
        while (item = expr.split(' ').shift()) {
            if (!isNaN(item)) {
                arr.push(item);
            } else {
                var result = count(item, arr.pop(), arr.pop());
                arr.push(result);
            }
        }
    }
    function count (number, num2, num1) {
            switch (number) {
                case '+':
                    return num2 + num1;
                case '-':
                    return num2 - num1;
                case '*':
                    return num2 * num1;
                case '/':
                    return num2 / num1;
            }
        }
    var exp=readline();
    console.log(calc(exp));
    //第三题
    function guibing(left, right) {
        var result = [];
        while(left.length > 0 && right.length > 0) {
            if(left[0] < right[0]) {
                result.push(left.shift());
            }
            else {
                result.push(right.shift());
            }
        }
        return result.concat(left).concat(right);
    }
    function guibingSort(arr){
        if(arr.length<=1){
            return arr;
        }else{
            var middle=Math.floor(arr.length/2);
            var left=arr.slice(0,middle);
            var right=arr.slice(middle);
            return guibing(guibingSort(left),guibingSort(right));
        }

    }

    var arr=[3,1,4,1,5,9,2,6];
    console.log(guibingSort(arr));
    //第四题
    function removeRepeat(data) {
        for(var i=0;i<data.length;i++){
            for(var j=i+1;j<data.length;j++){
                if(data[i].serial==data[j].serial){
                    data.splice(data[j],1);
                }
            }
        }
        return data;
    }
    var data=[{
        "name": "张三",
        "serial": "0001"
    }, {
        "name": "李四",
        "serial": "0002"
    }, {
        "name": "王五",
        "serial": "0003"
    }, {
        "name": "王五2",
        "serial": "0003"
    }, {
        "name": "赵四",
        "serial": "0004"
    }, {
        "name": "小明",
        "serial": "005"
    }, {
        "name": "小张",
        "serial": "006"
    }, {
        "name": "小李",
        "serial": "006"
    }, {
        "name": "小李2",
        "serial": "006"
    }, {
        "name": "赵四2",
        "serial": "0004"
    }];
    console.log(removeRepeat(data));
    //第五题
    function Tree(s){
        var index = 0 ;
        if(s.length>1){
            for(var i=0;i<s.length;i++){
                var a = 0;
                for(var j=i+1;j<s.length;j++){
                    if(s[j].parent == s[i].code){
                        a++;
                        index++;
                    }
                }
                if(a == 0&&s[i].parent!=''){
                    for(var n=0;n<s.length;n++){
                        s[n].children = s[n].children?s[n].children:[];
                        if(s[n].code == s[i].parent){
                            s[n].children.push(s[i]);
                        }
                    }
                    s.splice(i,1);
                    i--;
                }
            }
            if(index != 0){
                Tree(s);
            }
        }
        return s;
    }
    function handleTree(s){
        s = Tree(s);
        console.log(s);
        return s;
    }
    var s=[
        {
            "id": "1",
            "name": "中国",
            "code": "110",
            "parent": ""
        },
        {
            "id": "2",
            "name": "北京市",
            "code": "110000",
            "parent": "110"
        },
        {
            "id": "3",
            "name": "河北省",
            "code": "130000",
            "parent": "110"
        },
        {
            "id": "4",
            "name": "四川省",
            "code": "510000",
            "parent": "110"
        },
        {
            "id": "5",
            "name": "石家庄市",
            "code": "130001",
            "parent": "130000"
        },
        {
            "id": "6",
            "name": "唐山市",
            "code": "130002",
            "parent": "130000"
        },
        {
            "id": "7",
            "name": "邢台市",
            "code": "130003",
            "parent": "130000"
        },
        {
            "id": "8",
            "name": "成都市",
            "code": "510001",
            "parent": "510000"
        },
        {
            "id": "9",
            "name": "简阳市",
            "code": "510002",
            "parent": "510000"
        },
        {
            "id": "10",
            "name": "武侯区",
            "code": "51000101",
            "parent": "510001"
        },
        {
            "id": "11",
            "name": "金牛区",
            "code": "51000102",
            "parent": "510001"
        }
    ];
    handleTree(s);
